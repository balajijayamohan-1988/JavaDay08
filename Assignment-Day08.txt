/*Day08-Task 1.1 - Description: Create HashSet for the below values
Input: List=10,20,30,40,50,60,70,80,90,10,20 */

//project Sample
package org.test;
import java.util.*;
public class SampleOne {
    public static void main(String[] args) {
        List<Integer> a = new ArrayList<>();
             a.add(10);
             a.add(20);
             a.add(30);
             a.add(40);
             a.add(50);
             a.add(60);
             a.add(70);
             a.add(80);
             a.add(90);
             a.add(10);
             a.add(20);
                System.out.println("A values is : "+a);
        Set<Integer> a1 = new HashSet<>();
            a1.addAll(a);
                System.out.println("a1 values is : "+a1);    //dubplicate remoded in set 
    }
    
}
/* Runtime output
A values is : [10, 20, 30, 40, 50, 60, 70, 80, 90, 10, 20]
a1 values is : [80, 50, 20, 70, 40, 10, 90, 60, 30]
*/




/*Day08-Task 1.2: 
Description: Create a LinkedHashSet for the below values
Input: List=10,20,30,40,50,60,70,80,90,10,20
*/

//project Sample
package org.test;
import java.util.*;
public class SampleOne {
    public static void main(String[] args){
        List<Integer> a = new LinkedList<>();
            a.add(10);
            a.add(20);
            a.add(30);
            a.add(40);
            a.add(50);
            a.add(60);
            a.add(70);
            a.add(80);
            a.add(90);
            a.add(10);
            a.add(10);
                System.out.println("List a Values is : "+a);
         Set<Integer> a1 = new LinkedHashSet<>();
                a1.addAll(a);
                    System.out.println("set a1 values is : "+a1);       
    }
}
/* Runtime output
List a Values is : [10, 20, 30, 40, 50, 60, 70, 80, 90, 10, 10]
set a1 values is : [10, 20, 30, 40, 50, 60, 70, 80, 90]
*/





/* Day08-Tast 1.3;
Description: Create a TreeSet for the below Values
Input: List=10,20,30,40,50,60,70,80,90,10,20 */

//project Sample
package org.test;
import java.util.*;
public class SampleOne {
    public static void main(String[] args) {
        List<Integer> a = new Vector<>();
            a.add(10);
            a.add(20);
            a.add(30);
            a.add(40);
            a.add(50);
            a.add(60);
            a.add(70);
            a.add(80);
            a.add(90);
            a.add(10);
            a.add(20);
                System.out.println("List a values is : "+a);
        Set<Integer> a1 = new TreeSet<>();
            a1.addAll(a);
                System.out.println("Set a1 Values is : "+a1);       
    }
}
/* Runtime output
List a values is : [10, 20, 30, 40, 50, 60, 70, 80, 90, 10, 20]
Set a1 Values is : [10, 20, 30, 40, 50, 60, 70, 80, 90]
*/





/* Day08-Tast 2.1
Description: Convet the below list in to set(use addAll()) method
Input: List=10,20,30,90,10,10,40,50 */

//project Sample
package org.test;
import java.util.*;
public class SampleOne {
    public static void main(String[] args) {
        List<Integer> a = new ArrayList<>();
            a.add(10);
            a.add(20);
            a.add(30);
            a.add(90);
            a.add(10);
            a.add(10);
            a.add(40);
            a.add(50);
                System.out.println("1. List a vlues is : "+a);
        Set<Integer> a1 = new HashSet<>();
            a1.addAll(a);
                System.out.println("2. set a1 values is : "+a1);
    }
}
/* runtime output
1. List a vlues is : [10, 20, 30, 90, 10, 10, 40, 50]
2. set a1 values is : [50, 20, 40, 10, 90, 30]
*/





/*Day08-Tast 2.2
Description: Convet the below list in to set(use addAll()) method
Input: List=105,205,305,405,505,605,705,805,505,605 */

//project Sample;
package org.test;
import java.util.*;
public class SampleOne {
    public static void main(String[] args) {
        List<Integer> a = new LinkedList<>();
            a.add(105);
            a.add(205);
            a.add(305);
            a.add(405);
            a.add(505);
            a.add(605);
            a.add(705);
            a.add(805);
            a.add(505);
            a.add(605);
                System.out.println("List a values is : "+a);
        Set<Integer> a1 = new LinkedHashSet<>();
            a1.addAll(a);
                System.out.println("Set a1 values is : "+a1);         
    }
}
/* Runtime output
List a values is : [105, 205, 305, 405, 505, 605, 705, 805, 505, 605]
Set a1 values is : [105, 205, 305, 405, 505, 605, 705, 805]
*/





/* Day08-Tast 2.3
Description: Convet the below list in to set(use addAll()) method
Input: List=100,200,300,400,500,600,700,100,300,500 */

//project Sample
package org.test;
import java.util.*;
public class SampleOne {
    public static void main(String[] args) {
        List<Integer> a = new Vector<>();
            a.add(100);
            a.add(200);
            a.add(300);
            a.add(400);
            a.add(500);
            a.add(600);
            a.add(700);
            a.add(100);
            a.add(300);
            a.add(500);
                System.out.println("List a values is : "+a);
        Set<Integer> a1 = new TreeSet<>();
            a1.addAll(a);
                for(Integer a2:a1){
                    System.out.println("Set a1 values is : "+a2);
                }
                
    }
}
/* Runtime output
List a values is : [100, 200, 300, 400, 500, 600, 700, 100, 300, 500]
a1 values is : [100, 200, 300, 400, 500, 600, 700]
Set a1 values is : 100
Set a1 values is : 200
Set a1 values is : 300
Set a1 values is : 400
Set a1 values is : 500
Set a1 values is : 600
Set a1 values is : 700
*/





/*Day08-Task 3.1
Description: Get the each value of set by using enhanced for loop
Input: List=105,205,305,405,505,605,705,805 */

//project Sample
package org.test;
import java.util.*;
public class SampleOne {
    public static void main(String[] args) {
        List<Integer> a = new ArrayList<>(); // Wrapped Class 
            a.add(105);
            a.add(205);
            a.add(305);
            a.add(405);
            a.add(505);
            a.add(605);
            a.add(705);
            a.add(805);
        Set<Integer> a1 = new LinkedHashSet<>();
            a1.addAll(a);    
            for(Integer a2:a1){
                System.out.println("a2 values is : "+a2);
            }
    }
}
/* Runtime output
a2 values is : 105
a2 values is : 205
a2 values is : 305
a2 values is : 405
a2 values is : 505
a2 values is : 605
a2 values is : 705
a2 values is : 805
*/





/*Day08-Task 3.2
Description:  Create a TreeSet and iterate each value in
the set by using enhanced for loop  
Input: List= 10,20,30,40,50,60,70,80,90,10,20 */

//project Sample
package org.test;
import java.util.*;
public class SampleOne {
    public static void main(String[] args) {
        List<Integer> a = new ArrayList<>();
            a.add(10);
            a.add(20);
            a.add(30);
            a.add(40);
            a.add(50);
            a.add(60);
            a.add(70);
            a.add(80);
            a.add(90);
            a.add(10);
            a.add(20);
        Set<Integer> a1 = new TreeSet<>();
            a1.addAll(a);
            for(Integer a2:a1){
                System.out.println("a2 value is : "+a2);
            }
    }
}
/* runtime output
a2 value is : 10
a2 value is : 20
a2 value is : 30
a2 value is : 40
a2 value is : 50
a2 value is : 60
a2 value is : 70
a2 value is : 80
a2 value is : 90
*/





/*Day08-Task 3.3
Description:  Create a HashSet and iterate each value in
the set by using enhanced for loop  
Input: List= 10,20,30,40,50,60,70,80,90,10,20 */

//project Sample
package org.test;
import java.util.*;
public class SampleOne {
    public static void main(String[] args) {
        List<Integer> a = new Vector<>();
            a.add(10);
            a.add(20);
            a.add(30);
            a.add(40);
            a.add(50);
            a.add(60);
            a.add(70);
            a.add(80);
            a.add(90);
            a.add(10);
            a.add(20);
        Set<Integer> a1 = new HashSet<>();
            a1.addAll(a);
            for (Integer a2:a1) {
                System.out.println("a2 values is : "+a2);
            }    
    }
}
/* Runtime output
a2 values is : 80
a2 values is : 50
a2 values is : 20
a2 values is : 70
a2 values is : 40
a2 values is : 10
a2 values is : 90
a2 values is : 60
a2 values is : 30
*/





/*Day08-Task 4.1
Description: Create a new HashSet with values and return the common Values
Input: List=10,20,30,90,10,10,40,50
Input: List=30,40,50,60,80 */

//project Sample
package org.test;
import java.util.*;
public class SampleOne{
    public static void main(String[] args) {
        List<Integer> a = new ArrayList<>();
            a.add(10);
            a.add(20);
            a.add(30);
            a.add(90);
            a.add(10);
            a.add(10);
            a.add(40);
            a.add(50);
                Set<Integer> a1 = new HashSet<>();   
            a1.addAll(a);
            System.out.println("a1 values is : "+a1);
        List<Integer> b = new ArrayList<>();
            b.add(30);
            b.add(40);
            b.add(50);
            b.add(60);
            b.add(80);
        Set<Integer> b1 = new HashSet<>();
            b1.addAll(b);
            System.out.println("b1 values is : "+b1);
            b1.retainAll(a1);// common value only get
            System.out.println("Common values of a1 & b1 is :"+b1);
    }
}
/* runtime output
a1 values is : [50, 20, 40, 10, 90, 30]
b1 values is : [80, 50, 40, 60, 30]
Common values of a1 & b1 is :[50, 40, 30]
*/





/*Day08-Task 4.2
Description: Create a new LinkedHashSet with values and return the common Values
Input: List=10,20,30,90,10,10,40,50
Input: List=10,20,60,50,40,70,80,90 */

//project Sample
package org.test;
import java.util.*;
public class SampleOne {
    public static void main(String[] args) {
        List<Integer> a = new LinkedList<>();
            a.add(10);
            a.add(20);
            a.add(30);
            a.add(90);
            a.add(10);
            a.add(10);
            a.add(40);
            a.add(50);
        Set<Integer> a1 = new LinkedHashSet<>();
            a1.addAll(a);
                System.out.println("a1 values is : "+a1);
        List<Integer> b  = new LinkedList<>();
            b.add(30);
            b.add(40);
            b.add(50);
            b.add(60);
            b.add(80);
        Set<Integer> b1 = new LinkedHashSet<>();     
            b1.addAll(b);
                System.out.println("b1 value is "+b1);
        b1.retainAll(a1);
            System.out.println("Common value of a1&b1 is : "+b1);
    }
}
/* Runtime output
a1 values is : [10, 20, 30, 90, 40, 50]
b1 value is [30, 40, 50, 60, 80]
Common value of a1&b1 is : [30, 40, 50]
*/





/*Day08-Task 4.3
Description: Create a new TreeSet with values and return the common Values
Input: List=10,20,30,40,50,60,70,80
Input: List=100,200,300,400,500,600,700,8000 */

//project Sample
package org.test;
import java.util.*;
public class SampleOne {
    public static void main(String[] args) {
        List<Integer> a = new Vector<>();
            a.add(10);
            a.add(20);
            a.add(30);
            a.add(40);
            a.add(50);
            a.add(60);
            a.add(70);
            a.add(80);
        Set<Integer> a1 = new TreeSet<>();
            a1.addAll(a);
                System.out.println("Set a1 value is : "+a1);  
        List<Integer> b = new Vector<>();
            b.add(100);
            b.add(200);
            b.add(300);
            b.add(400);
            b.add(500);
            b.add(600);
            b.add(700);
            b.add(8000);
        Set<Integer> b1 = new TreeSet<>();
            b1.addAll(b);
                System.out.println("Set b1 value is : "+b);
        b1.retainAll(a1);
            System.out.println("Common value of a1&b1: "+b1);
    }
}
/* Runtime output
Set a1 value is : [10, 20, 30, 40, 50, 60, 70, 80]
Set b1 value is : [100, 200, 300, 400, 500, 600, 700, 8000]
Common value of a1&b1: []
*/





/*Day08-Task 5.1
Description: Create a new HashSet with values and perform removeAll() 
function (find uniqe one)
Input: List=10,20,30,90,10,10,40,50
Input: List=30,40,50,60,80 */

//project Sample
package org.test;
import java.util.*;
public class SampleOne {
    public static void main(String[] args) {
        List<Integer> a = new ArrayList<>();
            a.add(10);
            a.add(20);
            a.add(30);
            a.add(90);
            a.add(10);
            a.add(10);
            a.add(40);
            a.add(50);
        Set<Integer> a1 = new HashSet<>();
            a1.addAll(a);
                System.out.println("Set a1 value is : "+a1);
        List<Integer> b = new LinkedList<>();
            b.add(30);
            b.add(40);
            b.add(50);
            b.add(60);
            b.add(80);
        Set<Integer> b1 = new HashSet<>();
            b1.addAll(b);
                System.out.println("Set b1 value is : "+b1);
            b1.removeAll(a1);
                System.out.println("Uniqe value of a1&b1 is : "+b1);
    }
}
/* Runtime outputSet a1 value is : [50, 20, 40, 10, 90, 30]
Set b1 value is : [80, 50, 40, 60, 30]
Uniqe value of a1&b1 is : [80, 60]
*/






/*Day08-Task 5.2
Description: Create a new LinkedHashSet with values and perform removeAll() 
function (find uniqe one)
Input: List=10,20,30,90,10,10,40,50
Input: List=10,20,60,50,40,70,80,90 */

//project Sample
package org.test;
import java.util.*;
public class SampleOne {
    public static void main(String[] args) {
        List<Integer> a = new ArrayList<>();
            a.add(10);
            a.add(20);
            a.add(30);
            a.add(90);
            a.add(10);
            a.add(10);
            a.add(40);
            a.add(50);
        Set<Integer> a1 = new LinkedHashSet<>();
            a1.addAll(a);
            System.out.println("Set a1 value is : "+a1);
        List<Integer> b = new ArrayList<>();
            b.add(10);
            b.add(20);
            b.add(60);
            b.add(50);
            b.add(40);
            b.add(70);
            b.add(80);
            b.add(90);
        Set<Integer> b1 = new LinkedHashSet<>();
            b1.addAll(b);
                System.out.println("Set b1 values is : "+b1);
            b1.removeAll(a1);
                System.out.println("Uniq value of b1&a1"+b1);

    }
}
/* Runtime output
Set a1 value is : [10, 20, 30, 90, 40, 50]
Set b1 values is : [10, 20, 60, 50, 40, 70, 80, 90]
Uniq value of b1&a1[60, 70, 80]
*/





/*Day08-Task 5.3
Description: Create a new TreeSet with values and perform removeAll() 
function (find uniqe one)
Input: List=10,20,30,40,50,60,70,80
Input: List=100,200,300,400,500,600,700,8000 */

//project Sample
package org.test;
import java.util.*;
public class SampleOne {
    public static void main(String[] args) {
        List<Integer> a = new Vector<>();
            a.add(10);
            a.add(20);
            a.add(30);
            a.add(40);
            a.add(50);
            a.add(60);
            a.add(70);
            a.add(80);
        Set<Integer> a1 = new TreeSet<>();
            a1.addAll(a);
            System.out.println("Set a1 value is : "+a1);
        List<Integer> b = new LinkedList<>();
            b.add(100);
            b.add(200);
            b.add(300);
            b.add(400);
            b.add(500);
            b.add(600);
            b.add(700);
            b.add(8000);
        Set<Integer> b1 = new TreeSet<>();
            b1.addAll(b);
            System.out.println("Set b1 value is : "+b1);
            b1.removeAll(a1);
                System.out.println("Uniqe value of b1&a1"+b1);
                
    }
}
/* runtime output
Set a1 value is : [10, 20, 30, 40, 50, 60, 70, 80]
Set b1 value is : [100, 200, 300, 400, 500, 600, 700, 8000]
Uniqe value of b1&a1[100, 200, 300, 400, 500, 600, 700, 8000]
*/